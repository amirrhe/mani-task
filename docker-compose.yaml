version: '3'

services:
#   store-microservice:
#     build:
#       context: ./store-microservice
#       dockerfile: Dockerfile
#     restart: always
#     env_file:
#       - ./store-microservice/.env
#     # ports:
#     #   - '8081:8081'
#     networks:
#       - mynetwork
#     depends_on:
#       postgresql:
#         condition: "service_healthy"
#       rabbitmq:
#         condition: "service_healthy"

  retrieval-microservice:
    build:
      context: ./retreival-microservice
      dockerfile: Dockerfile
    restart: always
    env_file:
      - ./retreival-microservice/.env
    ports:
      - '8080:8080'
    networks:
      - mynetwork
    depends_on:
      postgresql:
        condition: "service_healthy"
      rabbitmq:
        condition: "service_healthy"


  postgresql:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - ./shared-data:/var/lib/postgresql/data
    networks:
      - mynetwork
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "${DB_NAME}", "-U", "${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:management 
    restart: always
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD", "rabbitmqctl", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./rabbitmq.config:/etc/rabbitmq/rabbitmq.config

networks:
  mynetwork:
